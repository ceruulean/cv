@import url('https://fonts.googleapis.com/css?family=Martel&display=swap');
/*
ELEMENT Declarations
*/

button {
  cursor: pointer;
}

h1,
h2 {
  text-transform: uppercase;
}

h3,
h4,
h5,
h6 {
  font-weight: 400;
}

p {
  width: var(--paragraphLength);
}

caption {
  display: flex;
  flex-flow: row wrap;
  justify-content: space-evenly;
}

/*Dot Menu*/

.dot-menu {
  position: fixed;
  z-index: 10;
  top: 40%;
  transform: translate(0, -40%);
}

.dot-menu ul {
  position: relative;
  list-style: none;
}

.dot-menu ul:before {
  position: absolute;
  opacity: 0;
  height: 0;
  width: 0;
  transition: all 300ms ease-in-out;
  z-index: -1;
}

.dot-menu:focus ul:before,
.dot-menu:hover ul:before {
  opacity: 1;
  content: '';
  width: calc(100% + 2em);
  height: calc(100% + 10em);
  top: -5em;
  left: -1em;
  position: absolute;
  border-radius: 0px 50px 20px 0;
  background-color: var(--bgColor);
  z-index: -1;
}

.dot-menu li {
  position: relative;
  margin: 0.5em auto 0.5em 1em;
  height: 1em;
}

.dot-menu a {
  position: relative;
  text-decoration: none;
  text-transform: uppercase;
  color: var(--accent1Color);
  font-size: 1.3rem;
}

.dot-menu .ghost {
  transition: all 200ms ease-out;
  visibility: hidden;
  opacity: 0;
}

.dot-menu li:before {
  position: absolute;
  content: '';
  height: 1em;
  width: 1em;
  border-radius: 50%;
  top: -2px;
  left: -1.5em;
  background-color: rgba(100,100,100,0.7);
}

.dot-menu .visited.active li:before {
  background-color: var(--accent2Color);
}

.dot-menu .visited.active .ghost {
  color: var(--accent2Color);
}

.jenga-reveal h2 {
  z-index: 1;
}

/*Tabby micktabtab*/

.tabby {
  height: 4rem;
  width: 4rem;
  border-radius: 50%;
  background-color: #e7f6ff;
  border: none;
  position: relative;
  box-shadow: 0 1px 3px var(--defaultShadow);
}

.tabby:after {
  content: '';
  height: 0;
  width: 0;
  position: absolute;
  border-left: var(--tabbyArrowSize) solid var(--tabbyArrowColor);
  border-top: var(--tabbyArrowSize) solid transparent;
  border-bottom: var(--tabbyArrowSize) solid transparent;
  top: 50%;
  transform: translate(0, -50%);
  right: 0.9rem;
}

/* Jagger Display */

.jagger {
  display: grid;
  grid-template-areas: "a b c d"
  "e e e e";
  grid-auto-rows: auto;
  grid-auto-columns: min-content;
  margin: 3rem auto;
  width: min-content;
}

.jagger section {
  width: 20vw;
  cursor: pointer;
  order: 1;
}

.jagger section:first-child {
  grid-area: a;
}

.jagger section:nth-child(3) {
  grid-area: b;
}

.jagger section:nth-child(5) {
  grid-area: c;
}

.jagger section:nth-child(7) {
  grid-area: d;
}

.jagger section > div {
  height: 500px;
  width: 100%;
  background-color: pink;
  filter: blur(0.3);
  opacity: 0.3;
  transition: all 300ms cubic-bezier(0.215, 0.610, 0.355, 1);
}

.jagger section:first-child > div {
  transform: translate(10%);
  clip-path: polygon(0% 30%, 90% 20%, 97% 100%, 20% 96%);
}

.jagger section:nth-child(3) > div {
  clip-path: polygon(4% 10%, 76% 0%, 87% 98%, 2% 90%);
  transform: translate(10%);
}

.jagger section:nth-child(5) > div {
  clip-path: polygon(0% 0%, 90% 3%, 80% 93%, 7% 100%);
}

.jagger section:nth-child(7) > div {
  clip-path: polygon(20% 20%, 90% 15%, 97% 100%, 2% 96%);
  transform: translate(-15%);
}

.jagger section:focus > div,
.jagger section:hover > div,
.jagger section:active > div {
  filter: none;
  opacity: 1;
  transform: scale(1.1);
}

.jagger section:focus + aside,
.jagger section:hover + aside {
  opacity: 1;
  visibility: visible;
}

.jagger h2 {
  top: -3rem;
}

.jagger aside {
  grid-area: e;
  order: 5;
  max-width: 60rem;
  visibility: hidden;
  opacity: 0;
  transition: opacity 300ms cubic-bezier(0.19, 1, 0.22, 1);
}

/*
      Jenga Reveal
*/

.tabby:before {
  content: '';
  height: 0;
  width: 0;
  position: absolute;
  border-right: var(--tabbyArrowSize) solid var(--tabbyArrowColor);
  border-top: var(--tabbyArrowSize) solid transparent;
  border-bottom: var(--tabbyArrowSize) solid transparent;
  top: 50%;
  transform: translate(0, -50%);
  left: 0.9rem;
}

.jenga-reveal {
  position: relative;
  width: 100%;
  background-color: var(--primaryColor);
  display: flex;
  flex-flow: column nowrap;
  justify-content: center;
  align-items: center;
  overflow: hidden;
}

.jenga-reveal .outer {
  position: absolute;
}

.jenga-reveal .title {
  text-transform: capitalize;
  text-align: center;
  position: absolute;
}

.jenga-reveal button {
  position: absolute;
  z-index: 1;
}

.jenga-reveal button.left {
  top: 50%;
  transform: translate(0, -50%);
  right: -2rem;
}

.jenga-reveal button.right {
  top: 50%;
  transform: translate(0, -50%);
  left: -2rem;
}

.jenga-reveal button.top {
  left: 50%;
  transform: translate(-50%) rotate(90deg);
  bottom: -2rem;
}

.jenga-reveal button.bottom {
  left: 50%;
  transform: translate(-50%) rotate(90deg);
  top: -2rem;
}

.jenga-reveal:not(.active) button {
  opacity: 0.7;
}

.jenga-reveal button:hover,
.jenga-reveal button:focus {
  opacity: 1;
}

.jenga-reveal .swatch {
  position: relative;
  width: 100%;
  height: 100%;
  background-color: rgb(26, 26, 26);
  transition: transform var(--jengaRevealTransitionDuration) ease-in-out;
  box-shadow: 0 3px 6px var(--defaultShadow) inset;
  position: relative;
  height: 100%;
  min-height: 4rem;
  margin: 0 5vw 0 5vw;
  z-index: 2;
}

.jenga-reveal .inner {
  max-width: var(--paragraphLength);
  margin: 1rem auto;
  padding: 1rem 2rem;
}

.jenga-reveal.active .swatch {
  transform: initial;
}

.jenga-reveal.left .swatch {
  transform: translate(-100%);
}

.jenga-reveal.right .swatch {
  transform: translate(100%);
}

.jenga-reveal.top .swatch {
  transform: translate(0, -100%);
}

.jenga-reveal.bottom .swatch {
  transform: translate(0, 100%);
}

/*
 Underline Reveal
*/

.underline-reveal:before {
  content: '';
  position: absolute;
  top: 0px;
  height: 5px;
  width: 100%;
  border-radius: 10px;
}

[class*="underline"] {
  width: 5rem;
  height: 5px;
  margin: 0 auto 0 auto;
  transition-property: width, height;
  transition-duration: var(--underlineRevealTransitionDuration);
  transition-timing-function: cubic-bezier(1, 0.3, 0, 1);
  background-color: var(--accent1Color);
}

.underline-reveal {
  position: relative;
  display: flex;
  flex-flow: column nowrap;
  overflow: hidden;
}

.underline-reveal.extend {
  width: 100%;
  max-width: 100%;
}

.underline-reveal caption[aria-hidden="true"] {
  display: none;
}

.underline-reveal caption {
  position: relative;
  margin: 4px auto 0 auto;
  padding-bottom: 1rem;
  width: 100%;
}

@keyframes slide-right-in {
  0% {
    transform: translate(-100%, 0);
    display: block;
  }

  100% {
    transform: translate(0, 0);
    display: block;
  }
}

/*Thanks https://stackoverflow.com/questions/42966641/how-to-transform-black-into-any-given-color-using-only-css-filters/43960991#43960991*/

/* the container used to hide the original bg */

.icon {
  width: 25px;
  height: 25px;
  overflow: hidden;
}

.squish {
  transform: scale(0.5, 1);
}

/* the content */

.icon.green>span {
  -webkit-filter: drop-shadow(60px 0px green);
  filter: drop-shadow(60px 0px green);
}

.icon.red>span {
  -webkit-filter: drop-shadow(60px 0px red);
  filter: drop-shadow(60px 0px red);
}

.icon>span {
  -webkit-filter: drop-shadow(60px 0px black);
  filter: drop-shadow(60px 0px black);
  margin-left: -60px;
  display: block;
  width: 61px;
  /* +1px for chrome bug...*/
  height: 60px;
  background-repeat: no-repeat;
  background-image: url("./static/star.svg");
}

.dot-menu ul {
  transition: all 300ms linear;
  left: -1em;
}

.dot-menu:focus ul {
  max-width: initial;
}

@media only screen and (min-width:1000px) {
  /* .dot-menu .active .ghost,
  li:hover .ghost,
  li:focus .ghost{
  visibility:visible;
  opacity:1;
  } */

  .dot-menu:hover ul {
    left: -1em;
    max-width: initial;
  }

  .dot-menu:hover .ghost {
    visibility: visible;
    opacity: 1;
    color: var(--accent1Color);
  }
}

@media only screen and (max-width:999px) {
  .dot-menu:before {
    content: '';
    height: 0;
    width: 0;
    position: absolute;
    border-left: 2.5em solid var(--accent1Color);
    border-top: 1.5em solid transparent;
    border-bottom: 1.5em solid transparent;
    top: -3em;
    left: 0rem;
    filter: drop-shadow(0px 2px 3px var(--defaultShadow));
    cursor: pointer;
    transition: transform 200ms linear, border-left 200ms linear;
  }

  .dot-menu ul {
    left: -2.5em;
    max-width: 1em;
  }

  .dot-menu:hover:not(:focus) ul:before {
    display: none;
  }

  .dot-menu li {
    margin: 0.8em auto 0.5em 1em;
  }

  .dot-menu li:before {
    background-color: rgba(100,100,100,1);
  }

  .dot-menu a {
    font-size: 2rem;
  }

  .ghost {
    text-overflow: clip;
    max-width: 1rem;
    overflow: hidden;
  }

  .dot-menu:focus .ghost {
    visibility: visible;
    opacity: 1;
  }

  .dot-menu:focus:before {
    border-left: 2.5em solid var(--accent2Color);
    transform: translate(0.4rem);
  }
}

@media only screen and (max-width:500px) {
  .dot-menu {
    top: 4em;
    transform: initial;
  }
}
/* Periodic Table of Stacks */

.periodic {
  display: grid;
  grid-template-columns: repeat(8, minmax(5%, 5rem));
  grid-template-rows: repeat(5, minmax(5%, 6rem));
  grid-column-gap: 5px;
  grid-row-gap: 10px;
  grid-template-areas: "k . . . . . . n"
  "k i . . . o h n"
  "k i t t t o h n"
  "k i t t t o h n"
  ". x x x x . . .";
  justify-content: center;
}

div[class^="g"] {
  display: flex;
  flex-direction: column;
  flex-wrap: wrap;
  justify-content: space-between;
  align-content: space-between;
}

.periodic .gk {
  grid-area: k;
}

.periodic .gi {
  grid-area: i;
}

.periodic .gt {
  grid-area: t;
}

.periodic .gh {
  grid-area: h;
}

.periodic .gn {
  grid-area: n;
}

.periodic .gx {
  grid-area: x;
}

.periodic .go {
  grid-area: o;
}

div[class*="g"] > div {
  position: relative;
  border: 1px solid white;
  max-width: 100%;
  width: 5rem;
  background-repeat: no-repeat;
  background-size: contain;
  background-position: center;
  transition: opacity 100ms ease-in;
  transition: transform 200ms ease-in;
  transition: background-color 200ms linear;
  box-sizing: border-box;
}

.periodic div[class^="g"] > div:not(.fav) {
  filter: grayscale(0.6);
  opacity: 0.4;
}

.periodic div[class^="g"] > div:hover,
.periodic div[class^="g"] > div:focus {
  filter: none;
  opacity: 1;
  transform: scale(1.1);
  background-color: rgba(255,255,255,1);
}

.periodic .fav {
  opacity: 1;
  z-index: 1;
  border: 3px solid white;
}

.periodic aside {
  visibility: hidden;
  /* position:relative;
  opacity:0; */
  /* transition:opacity 0.3s linear; */
  padding-bottom: 125%;
  text-align: center;
}

#apache {
  background-image: url("./static/icon-apache.svg");
}

div[id^="ado"] {
  background-size: 632% !important;
  background-image: url("./static/adobe-icons.png");
}

#adoai {
  background-position: 44.3% -8%;
}

#adops {
  background-position: 22% -8%;
}

#adoindesign {
  background-position: 66.3% -8%;
}

#adopremiere {
  background-position: 88.5% -8%;
}

#css3 {
  background-size: cover;
  background-image: url("./static/icon-css3.svg");
}

#directus {
  background-image: url("./static/icon-directus.svg");
}

#electron {
  background-image: url("./static/icon-electron.svg");
}

#eclipse {
  background-image: url("./static/icon-eclipse.png");
}

#figma {
  background-size: 170%;
  background-image: url("./static/icon-figma.svg");
}

#gimp {
  background-image: url("./static/icon-gimp.png");
}

#git {
  background-image: url("./static/icon-git.svg");
}

#gulp {
  background-image: url("./static/icon-gulp.svg");
}

#html5 {
  background-size: cover;
  background-image: url("./static/icon-html5.svg");
}

#inkscape {
  background-image: url("./static/icon-inkscape.svg");
}

#java {
  background-image: url("./static/icon-java.svg");
}

#js {
  background-image: url("./static/icon-js.svg");
}

#node {
  background-image: url("./static/icon-node.svg");
}

#php {
  background-size: cover;
  background-image: url("./static/icon-php.svg");
}

#react {
  background-image: url("./static/icon-react.svg");
}

#sql {
  background-size: cover;
  background-image: url("./static/icon-sql.png");
}

#ts {
  background-image: url("./static/icon-ts.svg");
}

#visualcode {
  background-image: url("./static/icon-visualcode.svg");
}

#vue {
  background-image: url("./static/icon-vue.svg");
}

#w3c {
  background-image: url("./static/icon-w3c.svg");
}

#webpack {
  background-image: url("./static/icon-webpack.svg");
}

@media only screen and (max-width:750px) {
  .periodic {
    display: flex;
    flex-flow: row nowrap;
  }

  .periodic div[class*="g"] {
    display: flex;
    flex-flow: row wrap;
    align-content: flex-start;
    width: 10vw;
    min-width: 2rem;
  }
}
/*! Generated by Font Squirrel (https://www.fontsquirrel.com) on February 6, 2020 */

@font-face {
  font-family: 'Tex Gyre Adventor';
  src: url("./static/font/texgyreadventor-bold-webfont.woff2") format('woff2'),
         url("./static/font/texgyreadventor-bold-webfont.woff") format('woff');
  font-weight: 700;
  font-style: normal;
}

@font-face {
  font-family: 'Tex Gyre Adventor';
  src: url("./static/font/texgyreadventor-bolditalic-webfont.woff2") format('woff2'),
         url("./static/font/texgyreadventor-bolditalic-webfont.woff") format('woff');
  font-weight: 700;
  font-style: italic;
}

@font-face {
  font-family: 'Tex Gyre Adventor';
  src: url("./static/font/texgyreadventor-italic-webfont.woff2") format('woff2'),
         url("./static/font/texgyreadventor-italic-webfont.woff") format('woff');
  font-weight: normal;
  font-style: italic;
}

@font-face {
  font-family: 'Tex Gyre Adventor';
  src: url("./static/font/texgyreadventor-regular-webfont.woff2") format('woff2'),
         url("./static/font/texgyreadventor-regular-webfont.woff") format('woff');
  font-weight: normal;
  font-style: normal;
}

:root {
  /*Entoyment variables*/
  --jengaRevealTransitionDuration: 400ms;
  --underlineRevealTransitionDuration: 900ms;
  --tabbyArrowSize: 0.9rem;
  --tabbyArrowColor: black;
  --defaultShadow: rgba(0,0,0,0.5);
  --paragraphLength: 55rem;
  --accent2Color: #fcfaf1;
  --accent1Color: #428fcc;
  --primaryColor: rgb(60, 80, 151);
  --secondaryColor: rgba(213,247,255,1);
  /*Site specific's variables*/
  --bgColor: #222222;
  --headerFont: 'Tex Gyre Adventor', Arial, sans-serif;
  --linkColor: rgba(245,255,174,1);
}

body {
  margin: 0;
  padding: 0;
  background-color: var(--bgColor);
  font-family: "Martel", 'Times New Roman', Times, serif;
  line-height: 1.3rem;
  width: 100%;
  color: var(--accent2Color);
}

header h1 {
  margin: 0 auto;
  font-size: calc(3rem + 10vw);
  margin: 0;
  line-height: calc(1rem + 5vh + 6vw);
}

body > header {
  width: 100%;
  background: rgb(212,221,255);
  background: linear-gradient(-20deg,rgba(85,116,233,1) 10%, rgba(245,255,174,1) 60%, rgba(213,247,255,1) 100%);
  -webkit-background-clip: text;
  background-clip: text;
  -webkit-text-fill-color: transparent;
  animation: kfshinyHeader 2s cubic-bezier(0.68, -0.55, 0.265, 1.55) infinite alternate;
  background-size: 300% 200%;
  padding-bottom: 5rem;
}

h1,
h2,
h3,
h4,
h5,
h6 {
  font-family: var(--headerFont);
  text-align: center;
  color: var(--accent2Color);
  letter-spacing: 4px;
}

@keyframes kfshinyHeader {
  0% {
    background-position: 30% 40%;
  }

  100% {
    background-position: initial;
  }
}

a {
  letter-spacing: 1px;
  color: var(--linkColor);
}

nav {
  text-transform: capitalize;
  font-family: var(--headerFont);
}

.see-more {
  max-width: 80vw;
  left: 0;
  margin: 5rem 0 5rem auto;
}

.about {
  width: 50rem;
  max-width: 100vw;
  margin: 0 auto;
}

@media only screen and (max-width:500px) {
  .see-more {
    max-width: 100%;
    margin: 5rem auto;
  }
}

@media only screen and (min-width:750px) {
  .techstack {
    top: 10%;
    position: absolute;
    right: 50%;
  }
}

/*FOOTER*/

.underline-reveal.auto:not(.extend) {
  animation: bounce 1s ease-in-out infinite alternate;
}

@keyframes bounce {
  0% {
    top: -3px;
  }

  100% {
    top: 7px;
  }
}

/* Not Frameowrk Relaeted CSS*/

.about caption {
  background-color: rgba(29,29,29,0.7);
}

/*Image by https://pixabay.com/users/tpsdave-12019/?utm_source=link-attribution&amp;utm_medium=referral&amp;utm_campaign=image&amp;utm_content=140113"
David Mark from
Pixabay*/

.rayimage {
  height: 100%;
  width: 100%;
  padding-top: 10rem;
  text-align: center;
  background-image: url("./static/california-140113_1920.jpg");
  background-size: cover;
  z-index: 0;
  filter: grayscale(0.6);
}

footer {
  margin: 1rem 0 0 0;
  padding: 1rem 0;
}

.hide {
  opacity: 0;
  visibility: hidden;
  display: none;
}

/** MICROMODAL dependency*/

#m-blocker {
  background-color: rgba(0,0,0,0.8);
  opacity: 1;
  transition: all 500ms linear;
  top: 0;
  width: 100vw;
  height: 100vh;
  z-index: 11;
  position: fixed;
}

.m-blocker {
  position: fixed;
  top: 0;
  width: 100vw;
  height: 100vh;
  z-index: 11;
  /* display: flex;
  flex-flow:column wrap;

  align-content:center; */
}

.modal {
  display: none;
  background-color: var(--primaryColor);
}

.modal.is-open {
  display: block;
  filter: grayscale(0.5);
}

.modal header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin: 1rem 5vw 0 5vw;
}

.modal caption {
  max-width: 60rem;
  background-color: var(--secondaryColor);
}

.modal button[data-micromodal-close] {
  background: transparent;
  position: relative;
  border: none;
}

.modal button[data-micromodal-close]:after {
  content: '×';
  font-size: 2em;
}

.modal [id*="content"] {
  background-color: var(--bgColor);
  box-shadow: 3px 3px 3px var(--defaultShadow);
}

[aria-modal="true"] {
  margin: 0 auto;
}

#instadict {
  width: 100%;
  height: calc(100vh - 15em);
  display: none;
}

.is-open #instadict {
  display: block;
}